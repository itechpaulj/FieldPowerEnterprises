/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fieldpowerenterprises;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Javinez
 */
public class supplier extends javax.swing.JFrame {
    PreparedStatement ps ;
    ResultSet rs;
    /**
     * Creates new form supplier
     */
    public supplier() {
        initComponents();
        showTableSupplier();
    }
    
    
    // arrayList
    public ArrayList<supplierClass> getfrom_supplierTbl(String query){
        ArrayList<supplierClass> getAllData = new ArrayList<>();
        
        try{
            ps = (PreparedStatement)database.getConnection().prepareStatement(query);
            rs = ps.executeQuery();
            supplierClass showAllData;
            while(rs.next())
            {
                showAllData = new supplierClass
                (
                    rs.getInt("ID"),
                    rs.getString("NAME"),
                    rs.getString("ADDRESS"),
                    rs.getString("CONTACT"),
                    rs.getString("EMAIL"),
                    rs.getString("DATE")
                );
                getAllData.add(showAllData);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage(),"",JOptionPane.ERROR_MESSAGE);
        }
        return getAllData;
    }
    
    //object 
    public void showTableSupplier(){
        ArrayList<supplierClass> list = getfrom_supplierTbl("SELECT `ID`, `NAME`, `ADDRESS`, `CONTACT`, `EMAIL`, `DATE` FROM `supplier_tbl` ");
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        Object[] row = new Object[6];
        
        for(int i=0;i<list.size();i++){
            row[0] = list.get(i).getsupplierId();
            row[1] = list.get(i).getsupplierName();
            row[2] = list.get(i).getsupplierAddress();
            row[3] = list.get(i).getsupplierContact();
            row[4] = list.get(i).getsupplierEmail();
            row[5] = list.get(i).getsupplierDate();
            model.addRow(row);
        }
      
    }
    
    
    // get the value of existing supplierName
    public boolean findSupplierName(String name){
        boolean isFalse = false;
        try{
            String sqlquery_existSupplierName = "SELECT `NAME` FROM `supplier_tbl` WHERE `NAME`=? ";
            ps = (PreparedStatement) database.getConnection().prepareStatement(sqlquery_existSupplierName);
            ps.setString(1, name);
            rs = ps.executeQuery();
            if(rs.next()){
                isFalse = true;
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return isFalse;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        supplierHeaderTxt = new javax.swing.JLabel();
        supplier_named = new javax.swing.JTextField();
        nameTxt = new javax.swing.JLabel();
        addressTxt = new javax.swing.JLabel();
        supplier_address = new javax.swing.JTextField();
        contactTxt = new javax.swing.JLabel();
        supplier_contact = new javax.swing.JTextField();
        contactTxt1 = new javax.swing.JLabel();
        supplier_email = new javax.swing.JTextField();
        supplier_date = new datechooser.beans.DateChooserCombo();
        contactTxt2 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        reportsBtn = new javax.swing.JButton();
        searchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        idTxt = new javax.swing.JLabel();
        idDisplay = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        supplierHeaderTxt.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        supplierHeaderTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        supplierHeaderTxt.setText("SUPPLIER");

        supplier_named.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        supplier_named.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        supplier_named.setToolTipText("");

        nameTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        nameTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameTxt.setText("Name");

        addressTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        addressTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addressTxt.setText("Address");

        supplier_address.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        supplier_address.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        supplier_address.setToolTipText("");

        contactTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        contactTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contactTxt.setText("Contact");

        supplier_contact.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        supplier_contact.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        supplier_contact.setToolTipText("");

        contactTxt1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        contactTxt1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contactTxt1.setText("Email");

        supplier_email.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        supplier_email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        supplier_email.setToolTipText("");

        supplier_date.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    supplier_date.setCalendarPreferredSize(new java.awt.Dimension(400, 200));
    supplier_date.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
    supplier_date.setFieldFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 12));
    supplier_date.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
    supplier_date.setShowOneMonth(true);

    contactTxt2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
    contactTxt2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    contactTxt2.setText("Date");

    saveBtn.setText("SAVE");
    saveBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveBtnActionPerformed(evt);
        }
    });

    updateBtn.setText("UPDATE");
    updateBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            updateBtnActionPerformed(evt);
        }
    });

    deleteBtn.setText("DELETE");
    deleteBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteBtnActionPerformed(evt);
        }
    });

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ID", "NAME", "ADDRESS", "CONTACT", "EMAILl", "DATE"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);
    if (jTable1.getColumnModel().getColumnCount() > 0) {
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        jTable1.getColumnModel().getColumn(3).setResizable(false);
        jTable1.getColumnModel().getColumn(4).setResizable(false);
        jTable1.getColumnModel().getColumn(5).setResizable(false);
    }

    reportsBtn.setText("Print");

    searchBtn.setText("Search");
    searchBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchBtnActionPerformed(evt);
        }
    });

    idTxt.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
    idTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    idTxt.setText("ID :");

    idDisplay.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
    idDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    idDisplay.setText("None");

    refreshBtn.setText("REFRESH");
    refreshBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            refreshBtnActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(supplierHeaderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 1244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(94, 94, 94)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(supplier_named, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(supplier_address, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(68, 68, 68)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(contactTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(supplier_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(supplier_email, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(37, 37, 37)
                                    .addComponent(contactTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(supplier_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(idDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reportsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(refreshBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)))))
            .addContainerGap(40, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(supplierHeaderTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(9, 9, 9)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)
                            .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addComponent(supplier_named, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)
                            .addComponent(supplier_address, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(contactTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addComponent(supplier_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(supplier_email, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplier_date, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(17, 17, 17))))
                .addGroup(layout.createSequentialGroup()
                    .addGap(153, 153, 153)
                    .addComponent(contactTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(80, 80, 80)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(27, 27, 27)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(27, 27, 27)
            .addComponent(reportsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(20, Short.MAX_VALUE))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        //insert supplier
        
        try{
            
            if(supplier_named.getText().equals("") || supplier_address.getText().equals("") || supplier_contact.getText().equals("") || supplier_email.getText().equals("") || supplier_date.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Can\'t Insert!\nPlease Check your input Fields.","",JOptionPane.ERROR_MESSAGE);
            }
            else if( findSupplierName(supplier_named.getText()) ){
                 JOptionPane.showMessageDialog(null, "Already Exsiting Username");
            }
            else{
                String sqlquery_Supplier = "INSERT INTO `supplier_tbl` (`NAME`, `ADDRESS`, `CONTACT`, `EMAIL`, `DATE`) VALUES (?,?,?,?,?)";
                ps = (PreparedStatement) database.getConnection().prepareStatement(sqlquery_Supplier);
                ps.setString(1,supplier_named.getText());
                ps.setString(2,supplier_address.getText());
                ps.setString(3,supplier_contact.getText());
                ps.setString(4,supplier_email.getText());
                ps.setString(5,supplier_date.getText());
                ps.executeUpdate();
                
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                showTableSupplier();
                JOptionPane.showMessageDialog(null,"Insert Successfully","",JOptionPane.INFORMATION_MESSAGE );
                
                idDisplay.setText("None");  
                supplier_named.setText(null);
                supplier_address.setText(null);
                supplier_contact.setText(null);
                supplier_email.setText(null);
                supplier_date.setText(null);
                              
            }

        }
        catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,"Network Failure!\n Please Try Again","",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        idDisplay.setText(model.getValueAt(i,0).toString());
        supplier_named.setText(model.getValueAt(i,1).toString());
        supplier_address.setText(model.getValueAt(i,2).toString());
        supplier_contact.setText(model.getValueAt(i,3).toString());
        supplier_email.setText(model.getValueAt(i,4).toString());
        supplier_date.setText(model.getValueAt(i,5).toString());
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        
        try{
            
            if(idDisplay.getText().equals("None")){
                JOptionPane.showMessageDialog(null, "Error!","",JOptionPane.ERROR_MESSAGE);
            }
            else{
                String sqlqueryUpdate = "UPDATE `supplier_tbl` SET `NAME`=?, `ADDRESS`=?, `CONTACT`=?, `EMAIL`=?, `DATE`=? WHERE `ID`=?  ";
                ps = (PreparedStatement) database.getConnection().prepareStatement(sqlqueryUpdate);


                ps.setString(1,supplier_named.getText());
                ps.setString(2,supplier_address.getText());
                ps.setString(3,supplier_contact.getText());
                ps.setString(4,supplier_email.getText());
                ps.setString(5,supplier_date.getText());
                ps.setString(6,idDisplay.getText());
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Update Succesfully","",JOptionPane.INFORMATION_MESSAGE);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                showTableSupplier();

                idDisplay.setText("None");  
                supplier_named.setText(null);
                supplier_address.setText(null);
                supplier_contact.setText(null);
                supplier_email.setText(null);
                supplier_date.setText(null);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        try{
            
            if(idDisplay.getText().equals("None")){
                JOptionPane.showMessageDialog(null, "Error!","",JOptionPane.ERROR_MESSAGE);
            }
            else{
         
                String sqlqueryDelete = "DELETE FROM `supplier_tbl` WHERE `supplier_id`=?  ";
                ps = (PreparedStatement) database.getConnection().prepareStatement(sqlqueryDelete);
                ps.setString(1,idDisplay.getText());
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Delete Succesfully","",JOptionPane.INFORMATION_MESSAGE);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                showTableSupplier();
                idDisplay.setText("None");  
                supplier_named.setText(null);
                supplier_address.setText(null);
                supplier_contact.setText(null);
                supplier_email.setText(null);
                supplier_date.setText(null);       
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        if(searchTxt.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Error!","",JOptionPane.ERROR_MESSAGE);
        }
        else{
        jTable1.setModel(new DefaultTableModel(null, new String[]{"supplier_id","supplier_name","supplier_address","supplier_contact","supplier_email","supplier_date"}));
        String sqlquerySearch = "SELECT `supplier_id`, `supplier_name`, `supplier_address`, `supplier_contact`, `supplier_email`, `supplier_date` FROM `supplier_tbl` WHERE `supplier_name` LIKE '%"+searchTxt.getText()+"%' ";
            ArrayList<supplierClass> list = getfrom_supplierTbl(sqlquerySearch);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            Object[] row = new Object[6];
                for(int i=0;i<list.size();i++){
                    row[0] = list.get(i).getsupplierId();
                    row[1] = list.get(i).getsupplierName();
                    row[2] = list.get(i).getsupplierAddress();
                    row[3] = list.get(i).getsupplierContact();
                    row[4] = list.get(i).getsupplierEmail();
                    row[5] = list.get(i).getsupplierDate();
                    model.addRow(row);
                }
        }

        
        
    }//GEN-LAST:event_searchBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            showTableSupplier();
            
            idDisplay.setText("None");  
            supplier_named.setText(null);
            supplier_address.setText(null);
            supplier_contact.setText(null);
            supplier_email.setText(null);
            supplier_date.setText(null);
    }//GEN-LAST:event_refreshBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])  {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new supplier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressTxt;
    private javax.swing.JLabel contactTxt;
    private javax.swing.JLabel contactTxt1;
    private javax.swing.JLabel contactTxt2;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel idDisplay;
    private javax.swing.JLabel idTxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nameTxt;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton reportsBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JLabel supplierHeaderTxt;
    private javax.swing.JTextField supplier_address;
    private javax.swing.JTextField supplier_contact;
    private datechooser.beans.DateChooserCombo supplier_date;
    private javax.swing.JTextField supplier_email;
    private javax.swing.JTextField supplier_named;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
